<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.dspace</groupId>
    <artifactId>dspace-spring-rest</artifactId>
    <packaging>war</packaging>
    <name>DSpace Spring Rest (Boot MVC + HATEOAS)</name>
    <description>
      DSpace new Rest API
    </description>

    <!-- 
      A Parent POM that Maven inherits DSpace Default 
      POM attributes from. 
    -->
   <parent>
      <groupId>org.dspace</groupId>
      <artifactId>dspace-parent</artifactId>
      <version>7.0-SNAPSHOT</version>
      <relativePath>..</relativePath>
   </parent>
   
   <properties>
       <!-- This is the path to the root [dspace-src] directory. -->
       <root.basedir>${basedir}/..</root.basedir>
       
       <!-- Default resource delimiter for Spring Boot, so it doesn't clash with Spring ${} placeholders-->
       <resource.delimiter>@</resource.delimiter>
       <!-- Define our starting class for our Spring Boot Application -->
       <start-class>org.dspace.app.rest.Application</start-class>
       <spring-boot.version>2.5.12</spring-boot.version>
       <json-path.version>2.2.0</json-path.version>
       <!-- <springdata.commons>1.13.0.RELEASE</springdata.commons> -->
   </properties>

    <dependencies>
        <!-- These next two dependencies build a WAR that is BOTH executable
             AND deployable into an external container (Tomcat).
             See: http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#build-tool-plugins-maven-packaging -->
        <!-- NOTE: For rapid development (if you don't need Solr or other webapps),
             you can temporarily comment these out, and switch <packaging> to "jar".
             This lets you develop in a standalone, runnable JAR application. -->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>-->
        <!-- Ensure embedded servlet container doesn't interfere when this
             WAR is deployed to an external Tomcat (i.e. provided). -->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
                        <exclusions>
                                <exclusion>
                                        <groupId>org.slf4j</groupId>
                                        <artifactId>log4j-over-slf4j</artifactId>
                                </exclusion>
                                <exclusion>
                                        <groupId>ch.qos.logback</groupId>
                                        <artifactId>logback-classic</artifactId>
                                </exclusion>
                        </exclusions>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
            <version>${spring-boot.version}</version>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
			<version>${json-path.version}</version>
		</dependency> -->
		
		<!-- The HAL Browser -->
 		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-browser</artifactId>
			<version>2.5.6.RELEASE</version>
			<!-- if you get a java.util.zip.ZipException: invalid LOC header (bad signature) 
			during the tomcat startup force the use of the previous version as the jar file 
			looks corrupted in the maven repository -->
			<!-- <version>2.5.5.RELEASE</version> -->
		</dependency>

         <!-- Add in Spring Security for AuthN and AuthZ -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency> -->

        <!-- Add in log4j support by excluding default logging, and using starter-log4j -->
        <!-- See: http://docs.spring.io/spring-boot/docs/current/reference/html/howto-logging.html#howto-configure-log4j-for-logging -->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j</artifactId>
        </dependency>-->

        <!-- DSpace dependencies -->
        <dependency>
            <groupId>org.dspace</groupId>
            <artifactId>dspace-api</artifactId>
            <exclusions>
            	<exclusion>
            		<groupId>com.fasterxml.jackson.core</groupId>
            		<artifactId>jackson-core</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.dspace</groupId>
            <artifactId>dspace-services</artifactId>
        </dependency>
        
        <!-- Apache Commons Collections 4.1 (used for MultiValuedMap to store metadata values for views) -->
        <!-- NOTE: Currently DSpace API / Services still used 3.2 and may need upgrading at some point -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
        </dependency>
        
    </dependencies>

</project>
